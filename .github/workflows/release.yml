name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    name: Test Before Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21.x
        
    - name: Run tests
      run: go test -v ./internal/...

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21.x
        
    - name: Get tag version
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Generate changelog
      id: changelog
      run: |
        if git describe --tags --abbrev=0 HEAD^ >/dev/null 2>&1; then
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^)
          CHANGELOG=$(git log --pretty=format:"- %s" $PREV_TAG..HEAD)
        else
          CHANGELOG=$(git log --pretty=format:"- %s")
        fi
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        echo "$CHANGELOG" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Build binaries
      run: |
        mkdir -p dist
        
        # Linux AMD64
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w -X main.version=${{ steps.get_version.outputs.VERSION }}" -o dist/envswitch-linux-amd64 .
        
        # Linux ARM64
        GOOS=linux GOARCH=arm64 go build -ldflags="-s -w -X main.version=${{ steps.get_version.outputs.VERSION }}" -o dist/envswitch-linux-arm64 .
        
        # Windows AMD64
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w -X main.version=${{ steps.get_version.outputs.VERSION }}" -o dist/envswitch-windows-amd64.exe .
        
        # macOS AMD64
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w -X main.version=${{ steps.get_version.outputs.VERSION }}" -o dist/envswitch-darwin-amd64 .
        
        # macOS ARM64 (Apple Silicon)
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w -X main.version=${{ steps.get_version.outputs.VERSION }}" -o dist/envswitch-darwin-arm64 .
        
    - name: Create checksums
      run: |
        cd dist
        sha256sum * > checksums.txt
        
    - name: Create archives
      run: |
        cd dist
        
        # Linux
        tar -czf envswitch-${{ steps.get_version.outputs.VERSION }}-linux-amd64.tar.gz envswitch-linux-amd64
        tar -czf envswitch-${{ steps.get_version.outputs.VERSION }}-linux-arm64.tar.gz envswitch-linux-arm64
        
        # macOS
        tar -czf envswitch-${{ steps.get_version.outputs.VERSION }}-darwin-amd64.tar.gz envswitch-darwin-amd64
        tar -czf envswitch-${{ steps.get_version.outputs.VERSION }}-darwin-arm64.tar.gz envswitch-darwin-arm64
        
        # Windows
        zip envswitch-${{ steps.get_version.outputs.VERSION }}-windows-amd64.zip envswitch-windows-amd64.exe
        
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.get_version.outputs.VERSION }}
        name: Release ${{ steps.get_version.outputs.VERSION }}
        body: |
          ## What's Changed
          
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ## Installation
          
          ### Quick Install (Linux/macOS)
          ```bash
          curl -sfL https://github.com/zoyopei/EnvSwitch/releases/download/${{ steps.get_version.outputs.VERSION }}/install.sh | sh
          ```
          
          ### Manual Download
          Download the appropriate binary for your platform from the assets below.
          
          ### Checksums
          See `checksums.txt` for file integrity verification.
          
          ## Full Changelog
          **Full Changelog**: https://github.com/zoyopei/EnvSwitch/compare/${{ steps.get_version.outputs.PREV_TAG }}...${{ steps.get_version.outputs.VERSION }}
        artifacts: |
          dist/*.tar.gz
          dist/*.zip
          dist/checksums.txt
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/zoyopei/envswitch
        tags: |
          type=ref,event=tag
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max 